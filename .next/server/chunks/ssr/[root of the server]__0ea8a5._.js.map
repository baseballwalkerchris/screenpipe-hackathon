{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/geist_e531dabc.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/geist_mono_68a01160.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,6JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,6JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,6JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/christophercheng/Desktop/Projects/screenpipe-hackathon/src/components/search-command.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppSelect = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppSelect() from the server but AppSelect is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/search-command.tsx <module evaluation>\",\n    \"AppSelect\",\n);\nexport const SearchCommand = registerClientReference(\n    function() { throw new Error(\"Attempted to call SearchCommand() from the server but SearchCommand is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/search-command.tsx <module evaluation>\",\n    \"SearchCommand\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,mEACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,mEACA"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/christophercheng/Desktop/Projects/screenpipe-hackathon/src/components/search-command.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppSelect = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppSelect() from the server but AppSelect is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/search-command.tsx\",\n    \"AppSelect\",\n);\nexport const SearchCommand = registerClientReference(\n    function() { throw new Error(\"Attempted to call SearchCommand() from the server but SearchCommand is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/search-command.tsx\",\n    \"SearchCommand\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,+CACA"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/christophercheng/Desktop/Projects/screenpipe-hackathon/src/lib/actions/get-screenpipe-app-settings.ts"],"sourcesContent":["\"use server\";\n\nimport { pipe } from \"@screenpipe/js\";\nimport type { Settings as ScreenpipeAppSettings } from \"@screenpipe/js\";\n\nexport async function getScreenpipeAppSettings() {\n\treturn await pipe.settings.getAll();\n}\n\nexport async function updateScreenpipeAppSettings(\n\tnewSettings: Partial<ScreenpipeAppSettings>,\n) {\n\treturn await pipe.settings.update(newSettings);\n}\n"],"names":[],"mappings":";;;;;;AAEA;;;;;AAGO,eAAe,uCAAsB,GAAtB;IACrB,OAAO,MAAM,mJAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,MAAM;AAClC;AAEO,eAAe,uCAAyB,GAAzB,4BACrB,WAA2C;IAE3C,OAAO,MAAM,mJAAA,CAAA,OAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;AACnC;;;IARsB;IAIA;;AAJA,+OAAA;AAIA,+OAAA"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///Users/christophercheng/Desktop/Projects/screenpipe-hackathon/src/components/settings-provider.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SettingsContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call SettingsContext() from the server but SettingsContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/settings-provider.tsx <module evaluation>\",\n    \"SettingsContext\",\n);\nexport const SettingsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SettingsProvider() from the server but SettingsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/settings-provider.tsx <module evaluation>\",\n    \"SettingsProvider\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sEACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,sEACA"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/christophercheng/Desktop/Projects/screenpipe-hackathon/src/components/settings-provider.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SettingsContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call SettingsContext() from the server but SettingsContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/settings-provider.tsx\",\n    \"SettingsContext\",\n);\nexport const SettingsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SettingsProvider() from the server but SettingsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/settings-provider.tsx\",\n    \"SettingsProvider\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,kDACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,kDACA"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///Users/christophercheng/Desktop/Projects/screenpipe-hackathon/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { SearchCommand } from \"@/components/search-command\";\nimport { NuqsAdapter } from \"nuqs/adapters/next/app\";\nimport { getScreenpipeAppSettings } from \"@/lib/actions/get-screenpipe-app-settings\";\nimport { SettingsProvider } from \"@/components/settings-provider\";\n\nconst geistSans = Geist({\n\tvariable: \"--font-geist-sans\",\n\tsubsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n\tvariable: \"--font-geist-mono\",\n\tsubsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n\ttitle: \"Timeline • Screenpipe\",\n\tdescription: \"View your screenpipe recordings in a timeline\",\n};\n\nexport const dynamic = \"force-dynamic\";\n\nexport default async function RootLayout({\n\tchildren,\n}: Readonly<{\n\tchildren: React.ReactNode;\n}>) {\n\tconst checkSettings = async () => {\n\t\ttry {\n\t\t\tconst settings = await getScreenpipeAppSettings();\n\n\t\t\treturn settings.enableFrameCache;\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Failed to load settings:\", error);\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tconst enabled = await checkSettings();\n\n\treturn (\n\t\t<html lang=\"en\">\n\t\t\t<body\n\t\t\t\tclassName={`${geistSans.variable} ${geistMono.variable} antialiased`}\n\t\t\t>\n\t\t\t\t<SettingsProvider>\n\t\t\t\t\t{!enabled ? (\n\t\t\t\t\t\t<div className=\"flex items-center justify-center h-screen\">\n\t\t\t\t\t\t\t<div className=\"text-center space-y-4\">\n\t\t\t\t\t\t\t\t<h2 className=\"text-xl font-medium\">Frame Cache Disabled</h2>\n\t\t\t\t\t\t\t\t<p className=\"text-muted-foreground\">\n\t\t\t\t\t\t\t\t\tPlease enable frame cache in settings to use the timeline\n\t\t\t\t\t\t\t\t\tfeature.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NuqsAdapter>\n\t\t\t\t\t\t\t\t<SearchCommand />\n\t\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t\t</NuqsAdapter>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</SettingsProvider>\n\t\t\t</body>\n\t\t</html>\n\t);\n}\n"],"names":[],"mappings":";;;;;;;;AAGA;AAEA;AACA;AAFA;;;;;;;;;AAcO,MAAM,WAAqB;IACjC,OAAO;IACP,aAAa;AACd;AAEO,MAAM,UAAU;AAER,eAAe,WAAW,EACxC,QAAQ,EAGP;IACD,MAAM,gBAAgB;QACrB,IAAI;YACH,MAAM,WAAW,MAAM,CAAA,GAAA,6JAAA,CAAA,2BAAwB,AAAD;YAE9C,OAAO,SAAS,gBAAgB;QACjC,EAAE,OAAO,OAAO;YACf,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,OAAO;QACR;IACD;IAEA,MAAM,UAAU,MAAM;IAEtB,qBACC,8OAAC;QAAK,MAAK;kBACV,cAAA,8OAAC;YACA,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;sBAEpE,cAAA,8OAAC,0IAAA,CAAA,mBAAgB;0BACf,CAAC,wBACD,8OAAC;oBAAI,WAAU;8BACd,cAAA,8OAAC;wBAAI,WAAU;;0CACd,8OAAC;gCAAG,WAAU;0CAAsB;;;;;;0CACpC,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;;;;;yCAOvC;8BACC,cAAA,8OAAC,uJAAA,CAAA,cAAW;;0CACX,8OAAC,uIAAA,CAAA,gBAAa;;;;;4BACb;;;;;;;;;;;;;;;;;;;;;;;AAQT"}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}